#!/usr/bin/env bash

set -e -o pipefail
set -v

# If this var is set to true later on,
# then gleam and rebar will be rebuilt
erlang_changed=false
rebar_changed=false
gleam_changed=false

build_pack_path=$(cd $(dirname $(dirname $0)); pwd)

# Ensure dirs are present
mkdir -p $1 $2 $3

build_path=$(cd $1 && pwd)
cache_path=$(cd $2 && pwd)
env_path=$(cd $3 && pwd)


source ${build_pack_path}/lib/path_funcs.sh
source ${build_pack_path}/lib/misc_funcs.sh
source ${build_pack_path}/lib/erlang_funcs.sh
source ${build_pack_path}/lib/gleam_funcs.sh
source ${build_pack_path}/lib/rebar_funcs.sh
source ${build_pack_path}/lib/app_funcs.sh
source ${build_pack_path}/lib/canonical_version.sh

mkdir -p $(build_platform_tools_path)

export_env_vars
load_config
check_erlang_version "$erlang_version"
check_gleam_version "$gleam_version"
check_rebar_version "$rebar_version"

# TODO: rebar/gleam are only used for building the app
# TODO: allow setting rebar version

check_stack
clean_cache

download_erlang
install_erlang

download_gleam
install_gleam

download_rebar
install_rebar

hook_pre_app_dependencies

hook_pre_compile
compile_app
hook_post_compile

write_profile_d_script
write_export
